name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Web
        run: ./bin/build --web-only
      - name: Dotnet
        run: ./bin/build --dotnet-only
      - name: Upload Static Web Content
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: src/slskd/wwwroot
  publish:
    name: Publish Build Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        runtime: ["win-x64", "linux-x64", "linux-musl-x64", "linux-arm64", "osx-x64"]
    steps:
      - uses: actions/checkout@v2
      - name: Set Environment Variables
        run: |
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          csproj=$(cat src/slskd/slskd.csproj)
          pattern='<VersionPrefix>(.*)<\/VersionPrefix>'
          [[ "$csproj" =~ $pattern ]]
          echo "APP_VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        with:
          name: web
          path: src/slskd/wwwroot
      - name: Publish ${{ matrix.runtime }}
        run: bin/publish --no-prebuild --runtime ${{ matrix.runtime }} --version-suffix ${{ env.SHORT_SHA }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: slskd-${{ env.APP_VERSION }}.${{ env.SHORT_SHA }}-${{ matrix.runtime }}
          path: dist/${{ matrix.runtime }}
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set Environment Variables
        run: |
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          csproj=$(cat src/slskd/slskd.csproj)
          pattern='<VersionPrefix>(.*)<\/VersionPrefix>'
          [[ "$csproj" =~ $pattern ]]
          echo "APP_VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
      - name: Build
        run: docker build -t slskd/slskd:${{ env.APP_VERSION }}.${{ env.SHORT_SHA }} .
      - name: Tag (Nightly)
        run: docker tag slskd/slskd:${{ env.APP_VERSION }}.${{ env.SHORT_SHA }} slskd/slskd:Nightly
      - name: Login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Push
        run: |
          docker push slskd/slskd:${{ env.APP_VERSION }}.${{ env.SHORT_SHA }}
          docker push slskd/slskd:nightly